name: Extractor

on:
  workflow_dispatch:
    inputs:
      ENVIRONMENT:
        description: "Choose whether to extract all Apis from dev or prod environment."
        required: true
        type: choice
        options:
          - dev
          - prod

env:
  apiops_release_version: v6.0.0-alpha.1.0.9

jobs:
  extract:
    runs-on: ubuntu-latest
    # environment: dev # change this to match the dev environment created in settings
    environment: ${{ github.event.inputs.ENVIRONMENT }}
    steps:
      - uses: actions/checkout@v3

      - name: Run extractor without Config Yaml
        env:
          AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          AZURE_RESOURCE_GROUP_NAME: ${{ secrets.AZURE_RESOURCE_GROUP_NAME }}
          API_MANAGEMENT_SERVICE_NAME: ${{ secrets.API_MANAGEMENT_SERVICE_NAME }}
          API_MANAGEMENT_SERVICE_OUTPUT_FOLDER_PATH: ${{ GITHUB.WORKSPACE }}/${{ secrets.APIM_FOLDER }} # change this to the artifacts folder
          API_SPECIFICATION_FORMAT: OpenAPIV3Json
        run: |
          Set-StrictMode -Version Latest
          $ErrorActionPreference = "Stop"
          $VerbosePreference = "Continue"
          $InformationPreference = "Continue"

          Write-Information "Setting name variables..."
          $releaseFileName = "extractor-linux-x64.zip"
          $executableFileName = "extractor"

          if ("${{ runner.os }}" -like "*win*") {
            $releaseFileName = "extractor-win-x64.zip"
            $executableFileName = "extractor.exe"
          }
          elseif ("${{ runner.os }}" -like "*mac*" -and "${{ runner.arch }}" -like "*arm*") {
            $releaseFileName = "extractor-osx-arm64.zip"
          }
          elseif ("${{ runner.os }}" -like "*mac*" -and "${{ runner.arch }}" -like "*x86_64*") {
            $releaseFileName = "extractor-osx-x64.zip"
          }

          Write-Information "Downloading release..."
          $uri = "https://github.com/Azure/apiops/releases/download/${{ env.apiops_release_version }}/$releaseFileName"
          $downloadFilePath = Join-Path "${{ runner.temp }}" $releaseFileName
          Invoke-WebRequest -Uri "$uri" -OutFile "$downloadFilePath"

          Write-Information "Extracting release..."
          $executableFolderPath = Join-Path "${{ runner.temp }}" "extractor"
          Expand-Archive -Path "$downloadFilePath" -DestinationPath "$executableFolderPath"
          $executableFilePath = Join-Path "$executableFolderPath" $executableFileName

          Write-Information "Setting file permissions..."
          if ("${{ runner.os }}" -like "*linux*")
          {
            & chmod +x "$executableFilePath"
            if ($LASTEXITCODE -ne 0) { throw "Setting file permissions failed."}
          }

          Write-Information "Running extractor..."
          & "$executableFilePath"              
          if ($LASTEXITCODE -ne 0) { throw "Running extractor failed."}

          Write-Information "Execution complete."
        shell: pwsh

      - name: publish artifact
        uses: actions/upload-artifact@v2
        env:
          API_MANAGEMENT_SERVICE_OUTPUT_FOLDER_PATH: ${{ secrets.APIM_FOLDER }} # change this to the artifacts folder
        with:
          name: artifacts-from-portal
          path: ${{ GITHUB.WORKSPACE }}/${{ env.API_MANAGEMENT_SERVICE_OUTPUT_FOLDER_PATH }}

  create-pull-request:
    needs: extract
    runs-on: [ubuntu-latest]
    environment: ${{ github.event.inputs.ENVIRONMENT }}
    steps:
      - uses: actions/checkout@v3

      - name: Download artifacts-from-portal
        uses: actions/download-artifact@v2
        env:
          API_MANAGEMENT_SERVICE_OUTPUT_FOLDER_PATH: ${{ secrets.APIM_FOLDER }} # change this to the artifacts folder
        with:
          name: artifacts-from-portal
          path: "${{ GITHUB.WORKSPACE }}/${{ env.API_MANAGEMENT_SERVICE_OUTPUT_FOLDER_PATH }}"

      - name: Create artifacts pull request
        uses: peter-evans/create-pull-request@v3
        env:
          API_MANAGEMENT_SERVICE_OUTPUT_FOLDER_PATH: ${{ secrets.APIM_FOLDER }} # change this to the artifacts folder
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "updated extract from apim instance ${{ env.API_MANAGEMENT_SERVICE_OUTPUT_FOLDER_PATH }}"
          title: "${{ env.API_MANAGEMENT_SERVICE_OUTPUT_FOLDER_PATH }} - extract"
          body: >
            This PR is auto-generated by Github actions workflow
          labels: extract, automated pr
